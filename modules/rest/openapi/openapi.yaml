openapi: 3.0.1
info:
  title: Ignite REST module
  contact:
    email: user@ignite.apache.org
  license:
    name: Apache 2.0
    url: https://ignite.apache.org
  version: 3.0.0-SNAPSHOT
paths:
  /management/v1/cluster/init:
    post:
      tags:
      - clusterManagement
      summary: TEST222
      operationId: init
      parameters:
      - name: clusterName
        in: query
        description: TEST111
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitCommand'
        required: true
      responses:
        "200":
          description: Cluster initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        "500":
          description: Internal error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "400":
          description: Incorrect configuration.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/cluster/state:
    get:
      tags:
      - clusterManagement
      operationId: clusterState
      parameters: []
      responses:
        "200":
          description: Return cluster state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterState'
        "404":
          description: "Cluster state not found. Most likely, the cluster is not initialized."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/cluster/topology/logical:
    get:
      tags:
      - topology
      operationId: logical
      parameters: []
      responses:
        "200":
          description: Logical topology returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClusterNode'
        "404":
          description: "Logical topology not found. Most likely, the cluster is not\
            \ initialized."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/cluster/topology/physical:
    get:
      tags:
      - topology
      operationId: physical
      parameters: []
      responses:
        "200":
          description: Physical topology returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClusterNode'
        "500":
          description: Internal error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/configuration/cluster:
    get:
      tags:
      - clusterConfiguration
      operationId: getClusterConfiguration
      parameters: []
      responses:
        "200":
          description: Get cluster configuration
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "400":
          description: Incorrect configuration.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: "Configuration not found. Most likely, the cluster is not initialized."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    patch:
      tags:
      - clusterConfiguration
      operationId: updateClusterConfiguration
      parameters: []
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Configuration updated
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Void'
        "500":
          description: Internal error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "400":
          description: Incorrect configuration.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: "Configuration not found. Most likely, the cluster is not initialized"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/configuration/cluster/{path}:
    get:
      tags:
      - clusterConfiguration
      operationId: getClusterConfigurationByPath
      parameters:
      - name: path
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Configuration represented by path
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "400":
          description: Incorrect configuration.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: "Configuration not found. Most likely, the cluster is not initialized"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/configuration/node:
    get:
      tags:
      - nodeConfiguration
      operationId: getNodeConfiguration
      parameters: []
      responses:
        "200":
          description: Whole node configuration
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "400":
          description: Incorrect configuration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    patch:
      tags:
      - nodeConfiguration
      operationId: updateNodeConfiguration
      parameters: []
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Configuration updated
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Void'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "400":
          description: Incorrect configuration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/configuration/node/{path}:
    get:
      tags:
      - nodeConfiguration
      operationId: getNodeConfigurationByPath
      parameters:
      - name: path
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Configuration represented by path
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "400":
          description: Incorrect configuration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/metric/node:
    get:
      tags:
      - nodeMetric
      operationId: listNodeMetrics
      parameters: []
      responses:
        "200":
          description: Returned metric sources.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricSource'
        "500":
          description: Internal error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/metric/node/disable:
    post:
      tags:
      - nodeMetric
      operationId: disableNodeMetric
      parameters: []
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Metric source disabled.
        "500":
          description: Internal error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Metric source not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/metric/node/enable:
    post:
      tags:
      - nodeMetric
      operationId: enableNodeMetric
      parameters: []
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Metric source enabled.
        "500":
          description: Internal error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Metric source not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/node/state:
    get:
      tags:
      - nodeManagement
      operationId: nodeState
      parameters: []
      responses:
        "200":
          description: Current node state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeState'
        "500":
          description: Internal error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /management/v1/node/version:
    get:
      tags:
      - nodeManagement
      operationId: nodeVersion
      parameters: []
      responses:
        "200":
          description: The version of the node.
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  schemas:
    ClusterNode:
      type: object
      properties:
        id:
          type: string
          description: Node ID.
        name:
          type: string
          description: Unique cluster name.
        address:
          $ref: '#/components/schemas/NetworkAddress'
        metadata:
          $ref: '#/components/schemas/NodeMetadata'
      description: Information about the cluster node.
    ClusterState:
      type: object
      properties:
        cmgNodes:
          type: array
          description: List of cluster management group nodes. These nodes are responsible
            for maintaining RAFT cluster topology.
          items:
            type: string
        msNodes:
          type: array
          description: List of metastorage nodes. These nodes are responsible for
            storing RAFT cluster metadata.
          items:
            type: string
        igniteVersion:
          type: string
          description: Version of Apache Ignite that the cluster was created on.
        clusterTag:
          $ref: '#/components/schemas/ClusterTag'
      description: Information about current cluster state.
    ClusterTag:
      type: object
      properties:
        clusterId:
          type: string
          description: Unique cluster UUID. Generated automatically.
          format: uuid
        clusterName:
          type: string
          description: Unique cluster name.
      description: Unique tag that identifies the cluster.
    InitCommand:
      type: object
      properties:
        metaStorageNodes:
          type: array
          description: "."
          items:
            type: string
        cmgNodes:
          type: array
          description: "."
          items:
            type: string
        clusterName:
          type: string
          description: "."
    InvalidParam:
      type: object
      properties:
        name:
          type: string
          description: Parameter name.
        reason:
          type: string
          description: THe issue with the parameter.
      description: Information about invalid request parameter.
    MetricSource:
      type: object
      properties:
        name:
          type: string
          description: Metric source name.
        enabled:
          type: boolean
          description: "If True, the metric is tracked. Otherwise, the metric is not\
            \ tracked."
      description: Metric sources. Provided by modules
    NetworkAddress:
      type: object
      properties:
        host:
          type: string
          description: Name of the host node is on.
        port:
          type: integer
          description: Port hte node runs on.
          format: int32
      description: Node network address information.
    NodeMetadata:
      type: object
      properties:
        restHost:
          type: string
          description: The host exposed to REST API.
        restPort:
          type: integer
          description: The port exposed to REST API.
          format: int32
      description: Node metadata information.
    NodeState:
      type: object
      properties:
        name:
          type: string
          description: Unique node name.
        state:
          $ref: '#/components/schemas/State'
      description: Node state.
    Problem:
      type: object
      properties:
        title:
          type: string
          description: Short summary of the issue.
        status:
          type: integer
          description: Returned HTTP status code.
          format: int32
        code:
          type: string
          description: Ignite 3 error code.
        type:
          type: string
          description: URI to documentation regarding the issue.
        detail:
          type: string
          description: Extended explanation of the issue.
        node:
          type: string
          description: Name of the node the issue happened on.
        traceId:
          type: string
          description: Unique issue identifier. Thid identifier can be used to find
            logs related to the issue
          format: uuid
        invalidParams:
          type: array
          description: Parameters that did not pass validation.
          items:
            $ref: '#/components/schemas/InvalidParam'
      description: Extended description of the problem with the request.
    State:
      type: string
      description: Possible node statuses.
      enum:
      - STARTING
      - STARTED
      - STOPPING
    Void:
      type: object
